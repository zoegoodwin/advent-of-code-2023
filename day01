# Day 1: Trebuchet?!

import regex as rx  # for pt2

# -- Part One -- ⭐

def calc_calibration(file_path):

    total_calibration = 0

    with open(file_path, 'r') as file:
        for line in file:
            line = line.strip()  #trim whitespace
            first_digit = None
            last_digit = None

            for char in line:
                if char.isdigit():
                    # if it's a digit and 1st is empty, assign to 1st
                    if first_digit is None:
                        first_digit = char
                    # will keep assigning next digit in the line until last digit reached
                    last_digit = char

            if first_digit and last_digit:
                calibration_value = int(first_digit + last_digit)
                total_calibration += calibration_value

    return total_calibration

total = calc_calibration('day01input.txt')
print("pt1 Total Calibration Value: ", total)


# -- Part Two -- ⭐

def calc_calibration_two(file_path):

    number_dict = {
        "one": "1", "two": "2", "three": "3", "four": "4", "five": "5",
        "six": "6", "seven": "7", "eight": "8", "nine": "9"
    }

    with open(file_path, 'r') as file:
        lines = file.read().splitlines()

    def spelled_number(n: str):
        if n.isdigit():
            return n
        return number_dict[n]

    overlap = "(?=(" + "|".join(number_dict.keys()) + "|\\d))"

    total_calibration = 0

    for line in lines:
        digits = rx.findall(overlap, line)
        digits = [*map(spelled_number, digits)]
        total_calibration += (int(f'{digits[0]}{digits[-1]}'))

    return total_calibration

total_2 = calc_calibration_two('day01input.txt')
print("pt2 Total Calibration Value: ", total_2)
